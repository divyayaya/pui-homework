{"ast":null,"code":"import React from\"react\";import\"../styles/styles.css\";import{useState}from\"react\";//component Roll has the following props\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Roll=_ref=>{let{imageSource,imageAltText,rollType,rollPrice,packSizeID,buttonIndex,packSizeSet,priceLabelId,updateCartStatus}=_ref;const[glazing,setGlazing]=useState(\"Keep original\");const[packSize,setPackSize]=useState(1);const basePrice=rollPrice;const[totalPrice,setTotalPrice]=useState(basePrice);//storing price change for glazing options\nconst glazingOptions=[{label:\"Keep original\",priceChange:0},{label:\"Sugar milk\",priceChange:0},{label:\"Vanilla milk\",priceChange:0.5},{label:\"Double chocolate\",priceChange:1.5}];//storing price multipliers for pack size options\nconst packSizeOptions=[{size:1,multiplier:1},{size:3,multiplier:3},{size:6,multiplier:5},{size:12,multiplier:10}];//conditional styling\nconst radioStyle=()=>({display:\"none\"});const radioLabelStyle=size=>{return{backgroundColor:packSize===size?\"rgb(191,191,191)\":\"rgb(255,255,255)\"//modifying color for selected pack size\n};};//event handler for when glazing option is changed\nconst handleGlazingChange=event=>{const selectedGlazing=glazingOptions.find(option=>option.label===event.target.value);setGlazing(selectedGlazing.label);if(packSize===-1)setPackSize(1);updatePrice(selectedGlazing.priceChange,packSize);//calculating price change for selected glazing\n};//event handler for when pack size option is changed\nconst handlePackSizeChange=event=>{const selectedPack=parseInt(event.target.value);setPackSize(selectedPack);if(packSize===-1)setPackSize(1);const selectedGlazing=glazingOptions.find(option=>option.label===glazing);//calculating price multiplier for selected pack size\nupdatePrice(selectedGlazing.priceChange,packSizeOptions.find(option=>option.size===selectedPack).multiplier);};//calculating price of selected roll configuration based on the formula\nconst updatePrice=(glazingPrice,packMultiplier)=>{const basePrice=rollPrice;const newPrice=(basePrice+glazingPrice)*packMultiplier;const priceLabel=document.getElementById(`price-label-${priceLabelId}`);setTotalPrice(newPrice);priceLabel.textContent=`$ ${newPrice.toFixed(2)}`;//dyamically updating the price label of each Roll card\n};//event handler for when 'Add to Cart' button is clicked\nconst handleAddToCart=()=>{if(packSize===-1)setPackSize(1);pushToCart(rollType,glazing,packSize,totalPrice);};function pushToCart(type,glaze,pack,price){displayPopup(type,glaze,pack,price);const pushRoll={rollIndex:Date.now(),rollType:type,rollGlaze:glaze,rollPack:pack,rollPrice:price,rollImage:imageSource,rollAltText:imageAltText};updateCartStatus(pushRoll);}function displayPopup(rollType,glazing,packSize,totalPrice){const popupContainer=document.getElementById(\"popup\");const dynamicContent=`\n      <div id=\"prompt\">\n          <h3>Added to cart:</h3>\n          <h2 id=\"roll-type\">${rollType}</h2>\n          <h3 id=\"glaze\">${glazing} glazing</h3>\n          <h3 id=\"pack\">Pack of ${packSize}</h3>\n          <h3 id=\"pricing\">Price: $${totalPrice.toFixed(2)}</h3>\n      </div>\n      `;popupContainer.innerHTML=dynamicContent;//dynamically populating HTML content within the container\n//revealing the popup\npopupContainer.classList.remove(\"hidden\");popupContainer.classList.add(\"visible\");//hiding the popup after 3 seconds\nsetTimeout(()=>{popupContainer.classList.remove(\"visible\");popupContainer.classList.add(\"hidden\");},3000);}return/*#__PURE__*/_jsxs(\"div\",{className:\"product-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"product-image\",children:/*#__PURE__*/_jsx(\"img\",{src:imageSource,alt:imageAltText})}),/*#__PURE__*/_jsx(\"h1\",{children:rollType}),/*#__PURE__*/_jsxs(\"form\",{action:\"#\",children:[\" \",/*#__PURE__*/_jsxs(\"div\",{className:\"row-1\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"glazing-options\",children:\"Glazing: \"}),/*#__PURE__*/_jsx(\"select\",{name:\"glazing\",className:\"glazing\",id:\"glazing-options\",onChange:handleGlazingChange,children:glazingOptions.map(option=>/*#__PURE__*/_jsx(\"option\",{value:option.label,children:option.label},option.label))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"row-2\",children:[/*#__PURE__*/_jsxs(\"label\",{id:packSizeID,htmlFor:`${packSizeSet}-pack-size`,children:[\"Pack size:\",\" \"]}),/*#__PURE__*/_jsx(\"input\",{type:\"radio\",id:`${packSizeID}-1`,name:`${packSizeSet}-pack-size`,value:\"1\",onChange:handlePackSizeChange,style:radioStyle()}),/*#__PURE__*/_jsx(\"label\",{className:`${packSizeID}-1`,htmlFor:`${packSizeID}-1`,style:radioLabelStyle(1),children:\"1\"}),/*#__PURE__*/_jsx(\"input\",{type:\"radio\",id:`${packSizeID}-3`,name:`${packSizeSet}-pack-size`,value:\"3\",onChange:handlePackSizeChange,style:radioStyle()}),/*#__PURE__*/_jsx(\"label\",{className:`${packSizeID}-3`,htmlFor:`${packSizeID}-3`,style:radioLabelStyle(3),children:\"3\"}),/*#__PURE__*/_jsx(\"input\",{type:\"radio\",id:`${packSizeID}-6`,name:`${packSizeSet}-pack-size`,value:\"6\",onChange:handlePackSizeChange,style:radioStyle()}),/*#__PURE__*/_jsx(\"label\",{className:`${packSizeID}-6`,htmlFor:`${packSizeID}-6`,style:radioLabelStyle(6),children:\"6\"}),/*#__PURE__*/_jsx(\"input\",{type:\"radio\",id:`${packSizeID}-12`,name:`${packSizeSet}-pack-size`,value:\"12\",onChange:handlePackSizeChange,style:radioStyle()}),/*#__PURE__*/_jsx(\"label\",{className:`${packSizeID}-12`,htmlFor:`${packSizeID}-12`,style:radioLabelStyle(12),children:\"12\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"row-3\",children:[\" \",/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"add-to-cart\",className:\"price\",id:`price-label-${priceLabelId}`,children:[\"$ \",rollPrice]}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"add-to-cart\",\"data-index\":buttonIndex,onClick:handleAddToCart,children:\"Add to Cart\"})]})]})]});};/* validating prop types *//* Source: “Typechecking With PropTypes – React.” \nAccessed: Sep. 22, 2024. [Online]. \nAvailable: https://legacy.reactjs.org/docs/typechecking-with-proptypes.html */export default Roll;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","Roll","_ref","imageSource","imageAltText","rollType","rollPrice","packSizeID","buttonIndex","packSizeSet","priceLabelId","updateCartStatus","glazing","setGlazing","packSize","setPackSize","basePrice","totalPrice","setTotalPrice","glazingOptions","label","priceChange","packSizeOptions","size","multiplier","radioStyle","display","radioLabelStyle","backgroundColor","handleGlazingChange","event","selectedGlazing","find","option","target","value","updatePrice","handlePackSizeChange","selectedPack","parseInt","glazingPrice","packMultiplier","newPrice","priceLabel","document","getElementById","textContent","toFixed","handleAddToCart","pushToCart","type","glaze","pack","price","displayPopup","pushRoll","rollIndex","Date","now","rollGlaze","rollPack","rollImage","rollAltText","popupContainer","dynamicContent","innerHTML","classList","remove","add","setTimeout","className","children","src","alt","action","htmlFor","name","id","onChange","map","style","onClick"],"sources":["/Users/divyamahesh/Documents/GitHub/pui-homework/solution-hw6/src/components/Roll.jsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../styles/styles.css\";\nimport { useState } from \"react\";\n\n//component Roll has the following props\nconst Roll = ({\n  imageSource,\n  imageAltText,\n  rollType,\n  rollPrice,\n  packSizeID,\n  buttonIndex,\n  packSizeSet,\n  priceLabelId,\n  updateCartStatus,\n}) => {\n  const [glazing, setGlazing] = useState(\"Keep original\");\n  const [packSize, setPackSize] = useState(1);\n  const basePrice = rollPrice;\n  const [totalPrice, setTotalPrice] = useState(basePrice);\n  //storing price change for glazing options\n  const glazingOptions = [\n    { label: \"Keep original\", priceChange: 0 },\n    { label: \"Sugar milk\", priceChange: 0 },\n    { label: \"Vanilla milk\", priceChange: 0.5 },\n    { label: \"Double chocolate\", priceChange: 1.5 },\n  ];\n\n  //storing price multipliers for pack size options\n  const packSizeOptions = [\n    { size: 1, multiplier: 1 },\n    { size: 3, multiplier: 3 },\n    { size: 6, multiplier: 5 },\n    { size: 12, multiplier: 10 },\n  ];\n\n  //conditional styling\n  const radioStyle = () => ({\n    display: \"none\",\n  });\n\n  const radioLabelStyle = (size) => {\n    return {\n      backgroundColor:\n        packSize === size ? \"rgb(191,191,191)\" : \"rgb(255,255,255)\", //modifying color for selected pack size\n    };\n  };\n\n  //event handler for when glazing option is changed\n  const handleGlazingChange = (event) => {\n    const selectedGlazing = glazingOptions.find(\n      (option) => option.label === event.target.value\n    );\n    setGlazing(selectedGlazing.label);\n    if (packSize === -1) setPackSize(1);\n    updatePrice(selectedGlazing.priceChange, packSize); //calculating price change for selected glazing\n  };\n\n  //event handler for when pack size option is changed\n  const handlePackSizeChange = (event) => {\n    const selectedPack = parseInt(event.target.value);\n    setPackSize(selectedPack);\n    if (packSize === -1) setPackSize(1);\n    const selectedGlazing = glazingOptions.find(\n      (option) => option.label === glazing\n    );\n    //calculating price multiplier for selected pack size\n    updatePrice(\n      selectedGlazing.priceChange,\n      packSizeOptions.find((option) => option.size === selectedPack).multiplier\n    );\n  };\n\n  //calculating price of selected roll configuration based on the formula\n  const updatePrice = (glazingPrice, packMultiplier) => {\n    const basePrice = rollPrice;\n    const newPrice = (basePrice + glazingPrice) * packMultiplier;\n    const priceLabel = document.getElementById(`price-label-${priceLabelId}`);\n    setTotalPrice(newPrice);\n    priceLabel.textContent = `$ ${newPrice.toFixed(2)}`; //dyamically updating the price label of each Roll card\n  };\n\n  //event handler for when 'Add to Cart' button is clicked\n  const handleAddToCart = () => {\n    if (packSize === -1) setPackSize(1);\n    pushToCart(rollType, glazing, packSize, totalPrice);\n  };\n\n  function pushToCart(type, glaze, pack, price) {\n    displayPopup(type, glaze, pack, price);\n    const pushRoll = {\n      rollIndex: Date.now(),\n      rollType: type,\n      rollGlaze: glaze,\n      rollPack: pack,\n      rollPrice: price,\n      rollImage: imageSource,\n      rollAltText: imageAltText,\n    };\n    updateCartStatus(pushRoll);\n  }\n\n  function displayPopup(rollType, glazing, packSize, totalPrice) {\n    const popupContainer = document.getElementById(\"popup\");\n    const dynamicContent = `\n      <div id=\"prompt\">\n          <h3>Added to cart:</h3>\n          <h2 id=\"roll-type\">${rollType}</h2>\n          <h3 id=\"glaze\">${glazing} glazing</h3>\n          <h3 id=\"pack\">Pack of ${packSize}</h3>\n          <h3 id=\"pricing\">Price: $${totalPrice.toFixed(2)}</h3>\n      </div>\n      `;\n\n    popupContainer.innerHTML = dynamicContent; //dynamically populating HTML content within the container\n\n    //revealing the popup\n    popupContainer.classList.remove(\"hidden\");\n    popupContainer.classList.add(\"visible\");\n\n    //hiding the popup after 3 seconds\n    setTimeout(() => {\n      popupContainer.classList.remove(\"visible\");\n      popupContainer.classList.add(\"hidden\");\n    }, 3000);\n  }\n\n  return (\n    <div className=\"product-card\">\n      <div className=\"product-image\">\n        <img src={imageSource} alt={imageAltText} />\n      </div>\n      <h1>{rollType}</h1>\n\n      <form action=\"#\">\n        {\" \"}\n        {/*form to take user input before adding to the cart*/}\n        <div className=\"row-1\">\n          <label htmlFor=\"glazing-options\">Glazing: </label>\n          <select\n            name=\"glazing\"\n            className=\"glazing\"\n            id=\"glazing-options\"\n            onChange={handleGlazingChange}\n          >\n            {/* dynamically populating dropdown menu */}\n            {/*“Source: [React] - How to use the map method in React.” \n            Accessed: Sep. 29, 2024. [Online]. \n            Available: https://www.shecodes.io/athena/7184-how-to-use-the-map-method-in-react */}\n            {glazingOptions.map((option) => (\n              <option key={option.label} value={option.label}>\n                {option.label}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div className=\"row-2\">\n          <label id={packSizeID} htmlFor={`${packSizeSet}-pack-size`}>\n            Pack size:{\" \"}\n          </label>\n          {/* row-2 of product-card defines the pack size using radio buttons for user input */}\n          <input\n            type=\"radio\"\n            id={`${packSizeID}-1`}\n            name={`${packSizeSet}-pack-size`}\n            value=\"1\"\n            onChange={handlePackSizeChange}\n            style={radioStyle()}\n          />\n          <label\n            className={`${packSizeID}-1`}\n            htmlFor={`${packSizeID}-1`}\n            style={radioLabelStyle(1)}\n          >\n            1\n          </label>\n          <input\n            type=\"radio\"\n            id={`${packSizeID}-3`}\n            name={`${packSizeSet}-pack-size`}\n            value=\"3\"\n            onChange={handlePackSizeChange}\n            style={radioStyle()}\n          />\n          <label\n            className={`${packSizeID}-3`}\n            htmlFor={`${packSizeID}-3`}\n            style={radioLabelStyle(3)}\n          >\n            3\n          </label>\n          <input\n            type=\"radio\"\n            id={`${packSizeID}-6`}\n            name={`${packSizeSet}-pack-size`}\n            value=\"6\"\n            onChange={handlePackSizeChange}\n            style={radioStyle()}\n          />\n          <label\n            className={`${packSizeID}-6`}\n            htmlFor={`${packSizeID}-6`}\n            style={radioLabelStyle(6)}\n          >\n            6\n          </label>\n          <input\n            type=\"radio\"\n            id={`${packSizeID}-12`}\n            name={`${packSizeSet}-pack-size`}\n            value=\"12\"\n            onChange={handlePackSizeChange}\n            style={radioStyle()}\n          />\n          <label\n            className={`${packSizeID}-12`}\n            htmlFor={`${packSizeID}-12`}\n            style={radioLabelStyle(12)}\n          >\n            12\n          </label>\n        </div>\n        <div className=\"row-3\">\n          {\" \"}\n          {/* row-3 of product-card displays the price with an Add to Cart button */}\n          <label\n            htmlFor=\"add-to-cart\"\n            className=\"price\"\n            id={`price-label-${priceLabelId}`}\n          >\n            $ {rollPrice}\n          </label>\n          {/* adding data-index attribute to uniquely identify each 'Add to Cart' button */}\n          <button\n            type=\"button\"\n            className=\"add-to-cart\"\n            data-index={buttonIndex}\n            onClick={handleAddToCart}\n          >\n            Add to Cart\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\n/* validating prop types */\n/* Source: “Typechecking With PropTypes – React.” \nAccessed: Sep. 22, 2024. [Online]. \nAvailable: https://legacy.reactjs.org/docs/typechecking-with-proptypes.html */\nRoll.propTypes = {\n  imageSource: PropTypes.string.isRequired,\n  imageAltText: PropTypes.string.isRequired,\n  rollType: PropTypes.string.isRequired,\n  rollPrice: PropTypes.number.isRequired,\n  packSizeID: PropTypes.string.isRequired,\n  buttonIndex: PropTypes.number.isRequired,\n  packSizeSet: PropTypes.string.isRequired,\n};\n\nexport default Roll;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}